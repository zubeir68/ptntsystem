/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.patientsystem.com;

import com.patientsystem.com.Controller.PatientHistoryController;
import com.patientsystem.com.Model.PatientHistory;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author zumo
 */
public class ManagePatientHistory extends javax.swing.JFrame {

    /**
     * Creates new form ManagePatientHistory
     */
    public ManagePatientHistory(int id, String firstname, String lastname, String subject) {
        initComponents();
        displayDocs(id);
        tFirstname.setText(firstname);
        tLastname.setText(lastname);
        patientId.setText(String.valueOf(id));
        tSubject.setText(subject);
        if(subject == "Receptionist") {
            insertButton.setEnabled(false);
            updateButton.setEnabled(false);
            deleteButton.setEnabled(false);
        }
    }
    
    public void displayDocs(int id) {
        PatientHistoryController phc = new PatientHistoryController();
        ArrayList<PatientHistory> list = phc.get(id);
        DefaultTableModel model = (DefaultTableModel)hisTable.getModel();
        System.out.println(list.size());
        Object[] row = new Object[12];
        
        for(int i=0; i < list.size(); i++) {
            row[0] = list.get(i).getId();
            row[1] = list.get(i).getVisitDate();
            row[2] = list.get(i).getBloodGroup();
            row[3] = list.get(i).getBloodPressureSys();
            row[4] = list.get(i).getBloodPressureDia();
            row[5] = list.get(i).getHeight();
            row[6] = list.get(i).getWeight();
            row[7] = list.get(i).getSymptoms();
            row[8] = list.get(i).getMedicalTests();
            row[9] = list.get(i).getDiagnosis();
            row[10] = list.get(i).getPrescription();
            
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        idLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tFirstname = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tLastname = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tBloodGroup = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        tBloodSys = new java.awt.TextField();
        jLabel10 = new javax.swing.JLabel();
        tBloodDia = new java.awt.TextField();
        jLabel11 = new javax.swing.JLabel();
        tHeight = new java.awt.TextField();
        jLabel12 = new javax.swing.JLabel();
        tWeight = new java.awt.TextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        hisTable = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        tSymptoms = new java.awt.TextArea();
        jLabel14 = new javax.swing.JLabel();
        tMedTestPres = new java.awt.TextArea();
        jLabel15 = new javax.swing.JLabel();
        tDiagnosis = new java.awt.TextArea();
        jLabel17 = new javax.swing.JLabel();
        tPrescription = new java.awt.TextArea();
        insertButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        patientId = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tSubject = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tLoggedInUsername = new javax.swing.JLabel();
        closeWindowButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Patient History");

        jLabel2.setText("Id:");

        idLabel.setText("None");

        jLabel4.setText("Firstname: ");

        tFirstname.setText("None");

        jLabel6.setText("Patient Lastname");

        tLastname.setText("None");

        jLabel8.setText("Blood Group: ");

        tBloodGroup.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "A-", "B", "B-", "AB", "AB-", "0", "0-" }));

        jLabel9.setText("Blood Pressure(sys): ");

        jLabel10.setText("Blood Pressure(dia):");

        jLabel11.setText("Height(cm):");

        jLabel12.setText("Weight(kg): ");

        hisTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Visit Date", "Blood Group", "Blood Pressure Sys", "Blood Pressure Dia", "Height", "Weight(kg)", "Symptoms", "Medical Tests Prescribed", "Diagnosis", "Prescription"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        hisTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hisTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(hisTable);

        jLabel13.setText("Symptoms:");

        jLabel14.setText("Medical Tests Prescribed:");

        jLabel15.setText("Diagnosis:");

        jLabel17.setText("Prescription:");

        insertButton.setText("Insert");
        insertButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                insertButtonMouseClicked(evt);
            }
        });
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonActionPerformed(evt);
            }
        });

        updateButton.setText("Update");
        updateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateButtonMouseClicked(evt);
            }
        });
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteButtonMouseClicked(evt);
            }
        });

        resetButton.setText("Reset Fields");
        resetButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetButtonMouseClicked(evt);
            }
        });
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Patient-id:");

        patientId.setText("None");

        jLabel5.setText("Logged in as:");

        tSubject.setText("None");

        jLabel7.setText("Username:");

        tLoggedInUsername.setText("None");

        closeWindowButton.setText("Close Window");
        closeWindowButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeWindowButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(7, 7, 7))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(9, 9, 9)))
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel12)
                                        .addComponent(jLabel9))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(idLabel)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(tBloodSys, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(28, 28, 28)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(tFirstname)
                                                .addGap(29, 29, 29)
                                                .addComponent(jLabel6)
                                                .addGap(18, 18, 18)
                                                .addComponent(tLastname)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(patientId)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel10)
                                                .addGap(23, 23, 23)
                                                .addComponent(tBloodDia, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(closeWindowButton))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(insertButton)
                                        .addGap(18, 18, 18)
                                        .addComponent(updateButton)
                                        .addGap(18, 18, 18)
                                        .addComponent(deleteButton)
                                        .addGap(18, 18, 18)
                                        .addComponent(resetButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tLoggedInUsername)
                                            .addComponent(tSubject))))
                                .addGap(76, 76, 76))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel13)
                                            .addComponent(tSymptoms, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(42, 42, 42)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel14)
                                            .addComponent(tMedTestPres, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(36, 36, 36)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel15)
                                            .addComponent(tDiagnosis, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(40, 40, 40)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel17)
                                            .addComponent(tPrescription, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(0, 163, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(insertButton)
                            .addComponent(updateButton)
                            .addComponent(deleteButton)
                            .addComponent(resetButton))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel11)
                                    .addComponent(tHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12)
                                    .addComponent(tWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(jLabel10))
                                    .addComponent(tBloodDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(tLastname)
                                            .addComponent(jLabel3)
                                            .addComponent(patientId))
                                        .addComponent(jLabel6))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel4)
                                        .addComponent(tFirstname)))))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tPrescription, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                            .addComponent(tDiagnosis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tSymptoms, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tMedTestPres, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(29, 29, 29)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel2)
                                            .addComponent(idLabel)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel8)
                                        .addComponent(tBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel9))
                                    .addComponent(tBloodSys, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(tSubject))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tLoggedInUsername)
                                    .addComponent(jLabel7))
                                .addGap(26, 26, 26)
                                .addComponent(closeWindowButton)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_resetButtonActionPerformed

    private void hisTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hisTableMouseClicked
        // TODO add your handling code here:
        int i = hisTable.getSelectedRow();
        TableModel model = hisTable.getModel();
        
        idLabel.setText(model.getValueAt(i, 0).toString());
        tBloodGroup.setSelectedItem(model.getValueAt(i, 2));
        tBloodSys.setText(model.getValueAt(i, 3).toString());
        tBloodDia.setText(model.getValueAt(i, 4).toString());
        tHeight.setText(model.getValueAt(i, 5).toString());
        tWeight.setText(model.getValueAt(i, 6).toString());
        tSymptoms.setText(model.getValueAt(i, 7).toString());
        tMedTestPres.setText(model.getValueAt(i, 8).toString());
        tDiagnosis.setText(model.getValueAt(i, 9).toString());
        tPrescription.setText(model.getValueAt(i, 10).toString());
       
    }//GEN-LAST:event_hisTableMouseClicked

    private void insertButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertButtonMouseClicked
        // TODO add your handling code here:
        try{
            if(tSubject.getText() != "Receptionist") {
                PatientHistoryController phc = new PatientHistoryController();
            
                Boolean task = phc.create(Integer.parseInt(patientId.getText()), tBloodGroup.getSelectedItem().toString(), tBloodSys.getText().toString(), tBloodDia.getText().toString() , Float.parseFloat(tHeight.getText()), Float.parseFloat(tWeight.getText()), tSymptoms.getText(), tMedTestPres.getText(), tDiagnosis.getText(), tPrescription.getText());
                if(task) {
                    JOptionPane.showMessageDialog(null, "Successfully created new history");
                    DefaultTableModel model = (DefaultTableModel)hisTable.getModel();
                    model.setRowCount(0);
                    displayDocs(Integer.parseInt(patientId.getText()));
                }else {
                    JOptionPane.showMessageDialog(null, "Something went wrong, please check all fields and try again");
                }
            }
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, "Something went wrong, please check all fields and try again");
        }
    }//GEN-LAST:event_insertButtonMouseClicked

    private void insertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_insertButtonActionPerformed

    private void updateButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateButtonMouseClicked
        // TODO add your handling code here:
        try {
            if(idLabel.getText() != "None" && tSubject.getText() != "Receptionist") {
                PatientHistoryController phc  = new PatientHistoryController();
                Boolean task = phc.update(Integer.parseInt(idLabel.getText()), tBloodGroup.getSelectedItem().toString(), Integer.parseInt(tBloodSys.getText()), Integer.parseInt(tBloodDia.getText()), Float.parseFloat(tHeight.getText()), Float.parseFloat(tWeight.getText()), tSymptoms.getText(), tMedTestPres.getText(), tDiagnosis.getText(), tPrescription.getText());
            
                if(task) {
                    JOptionPane.showMessageDialog(null, "Successfully updated history");
                    DefaultTableModel model = (DefaultTableModel)hisTable.getModel();
                    model.setRowCount(0);
                    displayDocs(Integer.parseInt(patientId.getText()));
                
                } else {
                    JOptionPane.showMessageDialog(null, "Something went wrong, please check all fields and try again");
                }
            }
            
            
        } catch(Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(null, "Something went wrong, please check all fields and try again");
        }
    }//GEN-LAST:event_updateButtonMouseClicked

    private void deleteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteButtonMouseClicked
        // TODO add your handling code here:
        if(idLabel.getText() != "None" && tSubject.getText() != "Receptionist") {
            PatientHistoryController phc = new PatientHistoryController();
            
            phc.delete(Integer.parseInt(idLabel.getText()));
            JOptionPane.showMessageDialog(null, "Successfully deleted  history");
            DefaultTableModel model = (DefaultTableModel)hisTable.getModel();
            model.setRowCount(0);
            displayDocs(Integer.parseInt(patientId.getText()));
            
        } else {
            if(tSubject.getText() != "Receptionist") {
                JOptionPane.showMessageDialog(null, "Please select a row in table");
            }
        }
    }//GEN-LAST:event_deleteButtonMouseClicked

    private void resetButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetButtonMouseClicked
        // TODO add your handling code here:
        idLabel.setText("None");
        tBloodSys.setText("");
        tBloodDia.setText("");
        tHeight.setText("");
        tWeight.setText("");
        tSymptoms.setText("");
        tMedTestPres.setText("");
        tDiagnosis.setText("");
        tPrescription.setText("");
    }//GEN-LAST:event_resetButtonMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        try {
            new ManageDoctor(tSubject.getText(), tLoggedInUsername.getText()).setVisible(true);
        } catch(Exception e) {
            e.printStackTrace();
        }   
    }//GEN-LAST:event_formWindowClosing

    private void closeWindowButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeWindowButtonMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_closeWindowButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look iand feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagePatientHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagePatientHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagePatientHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagePatientHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManagePatientHistory(0, "None", "None", "None").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeWindowButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTable hisTable;
    private javax.swing.JLabel idLabel;
    private javax.swing.JButton insertButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel patientId;
    private javax.swing.JButton resetButton;
    private java.awt.TextField tBloodDia;
    private javax.swing.JComboBox<String> tBloodGroup;
    private java.awt.TextField tBloodSys;
    private java.awt.TextArea tDiagnosis;
    private javax.swing.JLabel tFirstname;
    private java.awt.TextField tHeight;
    private javax.swing.JLabel tLastname;
    private javax.swing.JLabel tLoggedInUsername;
    private java.awt.TextArea tMedTestPres;
    private java.awt.TextArea tPrescription;
    private javax.swing.JLabel tSubject;
    private java.awt.TextArea tSymptoms;
    private java.awt.TextField tWeight;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
